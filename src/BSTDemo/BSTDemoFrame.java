package BSTDemo;

import java.awt.BorderLayout;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author NguyenQuocAnh CE170483
 */
public class BSTDemoFrame extends javax.swing.JFrame {

    BSTree tree;
    BSTPaper p;

    /**
     * Creates new form BSTDemo
     */
    public BSTDemoFrame() {
        initComponents();

        //maximize the frame
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);

        tree = new BSTree(1336, 50);
        p = new BSTPaper(tree, 1336, 50);
        pnlPaper.setSize(1336, 600);
        pnlPaper.setLayout(new BorderLayout());
        pnlPaper.add(p, BorderLayout.CENTER);

        txtTraversalResult.setEditable(false);

        // Thêm một ComponentListener để lắng nghe sự kiện thay đổi kích thước
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                // Xử lý sự kiện thay đổi kích thước tại đây
//                System.out.println("Frame resized to " + getSize());
                tree.screenWidth = getSize().width;
                p.screenWidth = getSize().width;
                pnlPaper.setSize(getSize().width, (int) (getSize().getHeight() - 100));
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        pnlConfig = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnAddRandomValue = new javax.swing.JButton();
        btnAddNode = new javax.swing.JButton();
        txtNodeValue = new javax.swing.JTextField();
        btnPreOrderTraversal = new javax.swing.JButton();
        btnInOrderTraversal = new javax.swing.JButton();
        btnPostOrderTraversal = new javax.swing.JButton();
        txtTraversalResult = new javax.swing.JTextField();
        btnFindNode = new javax.swing.JButton();
        btnDeleteNode = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBFSTraversal = new javax.swing.JButton();
        btnDFSTraversal = new javax.swing.JButton();
        btnBalancing = new javax.swing.JButton();
        pnlPaper = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Search Tree v1");

        pnlConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        jLabel1.setText("Node's value");

        btnAddRandomValue.setText("Add random");
        btnAddRandomValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRandomValueActionPerformed(evt);
            }
        });

        btnAddNode.setText("Add");
        btnAddNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNodeActionPerformed(evt);
            }
        });

        txtNodeValue.setText("0");
        txtNodeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNodeValueActionPerformed(evt);
            }
        });

        btnPreOrderTraversal.setText("Pre-Order");
        btnPreOrderTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrderTraversalActionPerformed(evt);
            }
        });

        btnInOrderTraversal.setText("In-Order");
        btnInOrderTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInOrderTraversalActionPerformed(evt);
            }
        });

        btnPostOrderTraversal.setText("Post-Order");
        btnPostOrderTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostOrderTraversalActionPerformed(evt);
            }
        });

        txtTraversalResult.setText("None");

        btnFindNode.setText("Find");
        btnFindNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindNodeActionPerformed(evt);
            }
        });

        btnDeleteNode.setText("Delete");
        btnDeleteNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteNodeActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBFSTraversal.setText("BFS");
        btnBFSTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBFSTraversalActionPerformed(evt);
            }
        });

        btnDFSTraversal.setText("DFS");
        btnDFSTraversal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFSTraversalActionPerformed(evt);
            }
        });

        btnBalancing.setText("Balancing");
        btnBalancing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalancingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfigLayout = new javax.swing.GroupLayout(pnlConfig);
        pnlConfig.setLayout(pnlConfigLayout);
        pnlConfigLayout.setHorizontalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTraversalResult)
                    .addGroup(pnlConfigLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddRandomValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFindNode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteNode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBalancing)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                        .addComponent(btnDFSTraversal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBFSTraversal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPreOrderTraversal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInOrderTraversal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPostOrderTraversal)))
                .addContainerGap())
        );
        pnlConfigLayout.setVerticalGroup(
            pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlConfigLayout.createSequentialGroup()
                .addGroup(pnlConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNode)
                    .addComponent(btnAddRandomValue)
                    .addComponent(btnPreOrderTraversal)
                    .addComponent(btnInOrderTraversal)
                    .addComponent(btnPostOrderTraversal)
                    .addComponent(btnFindNode)
                    .addComponent(btnDeleteNode)
                    .addComponent(btnClear)
                    .addComponent(btnBFSTraversal)
                    .addComponent(btnDFSTraversal)
                    .addComponent(btnBalancing))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTraversalResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPaper.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlPaper.setPreferredSize(new java.awt.Dimension(1040, 600));

        javax.swing.GroupLayout pnlPaperLayout = new javax.swing.GroupLayout(pnlPaper);
        pnlPaper.setLayout(pnlPaperLayout);
        pnlPaperLayout.setHorizontalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPaperLayout.setVerticalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 659, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, 1248, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static int randomNumber(int min, int max) {
        return min + (int) (Math.random() * ((max - min) + 1));
    }

    private void btnAddRandomValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRandomValueActionPerformed
        p.addNode(randomNumber(0, 99));
    }//GEN-LAST:event_btnAddRandomValueActionPerformed

    private void btnAddNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNodeActionPerformed
        p.addNode(Integer.parseInt(txtNodeValue.getText()));
    }//GEN-LAST:event_btnAddNodeActionPerformed

    private void txtNodeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNodeValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNodeValueActionPerformed

    private void btnPreOrderTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrderTraversalActionPerformed
        tree.preOrder();
        txtTraversalResult.setText("Pre-order traversal result: " + tree.getTraversalResult().substring(0, tree.getTraversalResult().length() - 2));
    }//GEN-LAST:event_btnPreOrderTraversalActionPerformed

    private void btnInOrderTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInOrderTraversalActionPerformed
        tree.inOrder();
        txtTraversalResult.setText("Pre-order traversal result: " + tree.getTraversalResult().substring(0, tree.getTraversalResult().length() - 2));
    }//GEN-LAST:event_btnInOrderTraversalActionPerformed

    private void btnPostOrderTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostOrderTraversalActionPerformed
        tree.postOrder();
        txtTraversalResult.setText("Pre-order traversal result: " + tree.getTraversalResult().substring(0, tree.getTraversalResult().length() - 2));
    }//GEN-LAST:event_btnPostOrderTraversalActionPerformed

    private void btnFindNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindNodeActionPerformed
        BSTNode node = this.tree.findNode(Integer.parseInt(txtNodeValue.getText()));
        if (node == null) {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is not found in the BST");
            JOptionPane.showMessageDialog(this, "The node '" + txtNodeValue.getText() + "' is not found in the BST", "Warning Message!", JOptionPane.WARNING_MESSAGE);
        } else {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is found in the BST: " + tree.getFindNodeResult().substring(0, tree.getFindNodeResult().length() - 4));
            p.drawPath();
        }
    }//GEN-LAST:event_btnFindNodeActionPerformed

    private void btnDeleteNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteNodeActionPerformed
        BSTNode node = this.tree.findNode(Integer.parseInt(txtNodeValue.getText()));
        if (node != null) {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is found in the BST: " + tree.getFindNodeResult().substring(0, tree.getFindNodeResult().length() - 4));
            p.drawPath();

            if (JOptionPane.showConfirmDialog(this, "Do you really want to delete node '" + txtNodeValue.getText() + "' ?") == JOptionPane.YES_OPTION) {
                p.deleteNode(node.getData());
                txtTraversalResult.setText("Delete node '" + txtNodeValue.getText() + "' succesfully.");
            }

        } else {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "' is not found in the BST");
            JOptionPane.showMessageDialog(this, "The node '" + txtNodeValue.getText() + "' is not found in the BST", "Warning Message!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteNodeActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Do you really want to delete all node of the tree ?") == JOptionPane.YES_OPTION) {
            p.clear();
            txtTraversalResult.setText("Delete the tree succesfully.");
        }

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBalancingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalancingActionPerformed
        p.balancing();
    }//GEN-LAST:event_btnBalancingActionPerformed

    private void btnDFSTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFSTraversalActionPerformed
        tree.DFS();
        txtTraversalResult.setText("DFS traversal result: " + tree.getTraversalResult().substring(0, tree.getTraversalResult().length() - 2));
    }//GEN-LAST:event_btnDFSTraversalActionPerformed

    private void btnBFSTraversalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBFSTraversalActionPerformed
        tree.BFS();
        txtTraversalResult.setText("BFS traversal result: " + tree.getTraversalResult().substring(0, tree.getTraversalResult().length() - 2));
    }//GEN-LAST:event_btnBFSTraversalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BSTDemoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BSTDemoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNode;
    private javax.swing.JButton btnAddRandomValue;
    private javax.swing.JButton btnBFSTraversal;
    private javax.swing.JButton btnBalancing;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDFSTraversal;
    private javax.swing.JButton btnDeleteNode;
    private javax.swing.JButton btnFindNode;
    private javax.swing.JButton btnInOrderTraversal;
    private javax.swing.JButton btnPostOrderTraversal;
    private javax.swing.JButton btnPreOrderTraversal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlConfig;
    private javax.swing.JPanel pnlPaper;
    private javax.swing.JTextField txtNodeValue;
    private javax.swing.JTextField txtTraversalResult;
    // End of variables declaration//GEN-END:variables
}
